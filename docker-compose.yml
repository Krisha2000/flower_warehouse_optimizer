---
x-airflow-common:
  &airflow-common
  build: .
  environment:
    - AIRFLOW__DATABASE__SQL_ALCHEMY_CONN=postgresql+psycopg2://airflow:airflow@postgres:5432/airflow
    - AIRFLOW__CORE__EXECUTOR=LocalExecutor
    - AIRFLOW__CORE__LOAD_DEFAULT_CONNECTIONS=true
    - AIRFLOW__CORE__LOAD_EXAMPLES=false
    - AIRFLOW__CORE__LOGGING_LEVEL=INFO
    - AIRFLOW__WEBSERVER__AUTHENTICATE=false
    - AIRFLOW__LOGGING__REMOTE_LOGGING=false
    - AIRFLOW__LOGGING__REMOTE_BASE_LOG_FOLDER=
    - AIRFLOW__LOGGING__REMOTE_LOG_CONN_ID=
    - AIRFLOW_UID=${AIRFLOW_UID:-50000}
    - AIRFLOW_GID=${AIRFLOW_GID:-0}
  volumes:
    - ./dags:/opt/airflow/dags:ro
    - ./logs:/opt/airflow/logs:rw
    - ./plugins:/opt/airflow/plugins:ro
    - ./data:/opt/airflow/data:rw
  user: "${AIRFLOW_UID:-50000}:${AIRFLOW_GID:-0}"
  depends_on:
    - postgres

services:
  postgres:
    image: postgres:13
    container_name: postgres
    environment:
      - POSTGRES_USER=airflow
      - POSTGRES_PASSWORD=airflow
      - POSTGRES_DB=airflow
    ports:
      - "5432:5432"
    volumes:
      - postgres-db-volume:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "airflow"]
      interval: 5s
      retries: 5

  airflow-init:
    <<: *airflow-common
    entrypoint: /bin/bash
    command:
      - -c
      - |
        mkdir -p /opt/airflow/logs /opt/airflow/data &&
        airflow db init &&
        airflow users create \
          --username admin \
          --firstname Krisha \
          --lastname Sompura \
          --role Admin \
          --email admin@example.com \
          --password admin
    restart: "no"
    depends_on:
      postgres:
        condition: service_healthy

  airflow-webserver:
    <<: *airflow-common
    command: webserver
    ports:
      - "8080:8080"
    restart: always
    healthcheck:
      test: ["CMD", "curl", "--fail", "http://localhost:8080/health"]
      interval: 10s
      timeout: 10s
      retries: 5
    depends_on:
      - airflow-init

  airflow-scheduler:
    <<: *airflow-common
    command: scheduler
    restart: always
    healthcheck:
      test: ["CMD-SHELL", 'airflow jobs check --job-type SchedulerJob --hostname "$${HOSTNAME}"']
      interval: 10s
      timeout: 10s
      retries: 5
    depends_on:
      - airflow-init

  # airflow-worker:
  #   <<: *airflow-common
  #   command: celery worker
  #   restart: always
  
  data-generator:
    <<: *airflow-common
    command: python -u /opt/airflow/scripts/data_generator.py
    restart: always
    depends_on:
      - airflow-init


  dashboard:
    build: .
    environment:
      - AIRFLOW_DATABASE_SQL_ALCHEMY_CONN=postgresql+psycopg2://airflow:airflow@postgres:5432/airflow
    command: bash -c "streamlit run /opt/airflow/scripts/app.py --server.port 8501 --server.address 0.0.0.0" # <-- CORRECT FILE
    ports:
      - "8501:8501"
    depends_on:
      - postgres
    volumes:
      - ./data:/opt/airflow/data:rw
      - ./scripts:/opt/airflow/scripts:ro
volumes:
  postgres-db-volume:

  # dashboard:
  #   build: .
  #   environment:
  #     - AIRFLOW_DATABASE_SQL_ALCHEMY_CONN=postgresql+psycopg2://airflow:airflow@postgres:5432/airflow
  #   command: bash -c "streamlit run /opt/airflow/scripts/dashboard.py --server.port 8501 --server.address 0.0.0.0"
  #   ports:
  #     - "8501:8501"
  #   depends_on:
  #     - postgres
  #   volumes:
  #     - ./data:/opt/airflow/data:rw